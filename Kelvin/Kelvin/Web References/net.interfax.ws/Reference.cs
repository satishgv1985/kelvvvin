//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.1433.
// 
#pragma warning disable 1591

namespace Kelvin.net.interfax.ws {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="InterFaxSoap", Namespace="http://www.interfax.cc")]
    public partial class InterFax : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetListPPOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPPCardDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPPCardTransactionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPPCardTransactionsAsByteArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback FaxStatusExOperationCompleted;
        
        private System.Threading.SendOrPostCallback FaxQuery2OperationCompleted;
        
        private System.Threading.SendOrPostCallback FaxQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback FaxStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback FaxStatusXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendCharFaxOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendfaxOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelFaxOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendfaxExOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendfaxEx_2OperationCompleted;
        
        private System.Threading.SendOrPostCallback ResendBroadcastFaxOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReSendFaxOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFaxImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback HideFaxOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendWordMailMergeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSupportedFileTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsSupportedFileTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartFileUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadFileChunkOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelFileUploadOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public InterFax() {
            this.Url = global::Kelvin.Properties.Settings.Default.Kelvin_net_interfax_ws_InterFax;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetListPPCompletedEventHandler GetListPPCompleted;
        
        /// <remarks/>
        public event GetPPCardDetailsCompletedEventHandler GetPPCardDetailsCompleted;
        
        /// <remarks/>
        public event GetPPCardTransactionsCompletedEventHandler GetPPCardTransactionsCompleted;
        
        /// <remarks/>
        public event GetPPCardTransactionsAsByteArrayCompletedEventHandler GetPPCardTransactionsAsByteArrayCompleted;
        
        /// <remarks/>
        public event FaxStatusExCompletedEventHandler FaxStatusExCompleted;
        
        /// <remarks/>
        public event FaxQuery2CompletedEventHandler FaxQuery2Completed;
        
        /// <remarks/>
        public event FaxQueryCompletedEventHandler FaxQueryCompleted;
        
        /// <remarks/>
        public event FaxStatusCompletedEventHandler FaxStatusCompleted;
        
        /// <remarks/>
        public event FaxStatusXMLCompletedEventHandler FaxStatusXMLCompleted;
        
        /// <remarks/>
        public event SendCharFaxCompletedEventHandler SendCharFaxCompleted;
        
        /// <remarks/>
        public event SendfaxCompletedEventHandler SendfaxCompleted;
        
        /// <remarks/>
        public event CancelFaxCompletedEventHandler CancelFaxCompleted;
        
        /// <remarks/>
        public event SendfaxExCompletedEventHandler SendfaxExCompleted;
        
        /// <remarks/>
        public event SendfaxEx_2CompletedEventHandler SendfaxEx_2Completed;
        
        /// <remarks/>
        public event ResendBroadcastFaxCompletedEventHandler ResendBroadcastFaxCompleted;
        
        /// <remarks/>
        public event ReSendFaxCompletedEventHandler ReSendFaxCompleted;
        
        /// <remarks/>
        public event GetFaxImageCompletedEventHandler GetFaxImageCompleted;
        
        /// <remarks/>
        public event HideFaxCompletedEventHandler HideFaxCompleted;
        
        /// <remarks/>
        public event SendWordMailMergeCompletedEventHandler SendWordMailMergeCompleted;
        
        /// <remarks/>
        public event GetSupportedFileTypesCompletedEventHandler GetSupportedFileTypesCompleted;
        
        /// <remarks/>
        public event IsSupportedFileTypeCompletedEventHandler IsSupportedFileTypeCompleted;
        
        /// <remarks/>
        public event StartFileUploadCompletedEventHandler StartFileUploadCompleted;
        
        /// <remarks/>
        public event UploadFileChunkCompletedEventHandler UploadFileChunkCompleted;
        
        /// <remarks/>
        public event CancelFileUploadCompletedEventHandler CancelFileUploadCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.interfax.cc/GetListPP", RequestNamespace="http://www.interfax.cc", ResponseNamespace="http://www.interfax.cc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ListPPResult GetListPP(string Username, string Password) {
            object[] results = this.Invoke("GetListPP", new object[] {
                        Username,
                        Password});
            return ((ListPPResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetListPPAsync(string Username, string Password) {
            this.GetListPPAsync(Username, Password, null);
        }
        
        /// <remarks/>
        public void GetListPPAsync(string Username, string Password, object userState) {
            if ((this.GetListPPOperationCompleted == null)) {
                this.GetListPPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListPPOperationCompleted);
            }
            this.InvokeAsync("GetListPP", new object[] {
                        Username,
                        Password}, this.GetListPPOperationCompleted, userState);
        }
        
        private void OnGetListPPOperationCompleted(object arg) {
            if ((this.GetListPPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListPPCompleted(this, new GetListPPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.interfax.cc/GetPPCardDetails", RequestNamespace="http://www.interfax.cc", ResponseNamespace="http://www.interfax.cc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PPCardResult GetPPCardDetails(string Username, string Password, int PPCardID) {
            object[] results = this.Invoke("GetPPCardDetails", new object[] {
                        Username,
                        Password,
                        PPCardID});
            return ((PPCardResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetPPCardDetailsAsync(string Username, string Password, int PPCardID) {
            this.GetPPCardDetailsAsync(Username, Password, PPCardID, null);
        }
        
        /// <remarks/>
        public void GetPPCardDetailsAsync(string Username, string Password, int PPCardID, object userState) {
            if ((this.GetPPCardDetailsOperationCompleted == null)) {
                this.GetPPCardDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPPCardDetailsOperationCompleted);
            }
            this.InvokeAsync("GetPPCardDetails", new object[] {
                        Username,
                        Password,
                        PPCardID}, this.GetPPCardDetailsOperationCompleted, userState);
        }
        
        private void OnGetPPCardDetailsOperationCompleted(object arg) {
            if ((this.GetPPCardDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPPCardDetailsCompleted(this, new GetPPCardDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.interfax.cc/GetPPCardTransactions", RequestNamespace="http://www.interfax.cc", ResponseNamespace="http://www.interfax.cc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PPCardTransactions GetPPCardTransactions(string Username, string Password, int PPCardID, int FirstResult, int NumOfResults) {
            object[] results = this.Invoke("GetPPCardTransactions", new object[] {
                        Username,
                        Password,
                        PPCardID,
                        FirstResult,
                        NumOfResults});
            return ((PPCardTransactions)(results[0]));
        }
        
        /// <remarks/>
        public void GetPPCardTransactionsAsync(string Username, string Password, int PPCardID, int FirstResult, int NumOfResults) {
            this.GetPPCardTransactionsAsync(Username, Password, PPCardID, FirstResult, NumOfResults, null);
        }
        
        /// <remarks/>
        public void GetPPCardTransactionsAsync(string Username, string Password, int PPCardID, int FirstResult, int NumOfResults, object userState) {
            if ((this.GetPPCardTransactionsOperationCompleted == null)) {
                this.GetPPCardTransactionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPPCardTransactionsOperationCompleted);
            }
            this.InvokeAsync("GetPPCardTransactions", new object[] {
                        Username,
                        Password,
                        PPCardID,
                        FirstResult,
                        NumOfResults}, this.GetPPCardTransactionsOperationCompleted, userState);
        }
        
        private void OnGetPPCardTransactionsOperationCompleted(object arg) {
            if ((this.GetPPCardTransactionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPPCardTransactionsCompleted(this, new GetPPCardTransactionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.interfax.cc/GetPPCardTransactionsAsByteArray", RequestNamespace="http://www.interfax.cc", ResponseNamespace="http://www.interfax.cc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PPCardTrasnactionsByteArray GetPPCardTransactionsAsByteArray(string Username, string Password, int Year, int Month) {
            object[] results = this.Invoke("GetPPCardTransactionsAsByteArray", new object[] {
                        Username,
                        Password,
                        Year,
                        Month});
            return ((PPCardTrasnactionsByteArray)(results[0]));
        }
        
        /// <remarks/>
        public void GetPPCardTransactionsAsByteArrayAsync(string Username, string Password, int Year, int Month) {
            this.GetPPCardTransactionsAsByteArrayAsync(Username, Password, Year, Month, null);
        }
        
        /// <remarks/>
        public void GetPPCardTransactionsAsByteArrayAsync(string Username, string Password, int Year, int Month, object userState) {
            if ((this.GetPPCardTransactionsAsByteArrayOperationCompleted == null)) {
                this.GetPPCardTransactionsAsByteArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPPCardTransactionsAsByteArrayOperationCompleted);
            }
            this.InvokeAsync("GetPPCardTransactionsAsByteArray", new object[] {
                        Username,
                        Password,
                        Year,
                        Month}, this.GetPPCardTransactionsAsByteArrayOperationCompleted, userState);
        }
        
        private void OnGetPPCardTransactionsAsByteArrayOperationCompleted(object arg) {
            if ((this.GetPPCardTransactionsAsByteArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPPCardTransactionsAsByteArrayCompleted(this, new GetPPCardTransactionsAsByteArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.interfax.cc/FaxStatusEx", RequestNamespace="http://www.interfax.cc", ResponseNamespace="http://www.interfax.cc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public FaxItemEx[] FaxStatusEx(string Username, string Password, int LastTransactionID, int MaxItems, ref int TotalCount, ref int ListSize, ref int ResultCode) {
            object[] results = this.Invoke("FaxStatusEx", new object[] {
                        Username,
                        Password,
                        LastTransactionID,
                        MaxItems,
                        TotalCount,
                        ListSize,
                        ResultCode});
            TotalCount = ((int)(results[1]));
            ListSize = ((int)(results[2]));
            ResultCode = ((int)(results[3]));
            return ((FaxItemEx[])(results[0]));
        }
        
        /// <remarks/>
        public void FaxStatusExAsync(string Username, string Password, int LastTransactionID, int MaxItems, int TotalCount, int ListSize, int ResultCode) {
            this.FaxStatusExAsync(Username, Password, LastTransactionID, MaxItems, TotalCount, ListSize, ResultCode, null);
        }
        
        /// <remarks/>
        public void FaxStatusExAsync(string Username, string Password, int LastTransactionID, int MaxItems, int TotalCount, int ListSize, int ResultCode, object userState) {
            if ((this.FaxStatusExOperationCompleted == null)) {
                this.FaxStatusExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFaxStatusExOperationCompleted);
            }
            this.InvokeAsync("FaxStatusEx", new object[] {
                        Username,
                        Password,
                        LastTransactionID,
                        MaxItems,
                        TotalCount,
                        ListSize,
                        ResultCode}, this.FaxStatusExOperationCompleted, userState);
        }
        
        private void OnFaxStatusExOperationCompleted(object arg) {
            if ((this.FaxStatusExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FaxStatusExCompleted(this, new FaxStatusExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.interfax.cc/FaxQuery2", RequestNamespace="http://www.interfax.cc", ResponseNamespace="http://www.interfax.cc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FaxQueryResult FaxQuery2(string Username, string Password, QueryForm QueryForm, QueryControl QueryControl) {
            object[] results = this.Invoke("FaxQuery2", new object[] {
                        Username,
                        Password,
                        QueryForm,
                        QueryControl});
            return ((FaxQueryResult)(results[0]));
        }
        
        /// <remarks/>
        public void FaxQuery2Async(string Username, string Password, QueryForm QueryForm, QueryControl QueryControl) {
            this.FaxQuery2Async(Username, Password, QueryForm, QueryControl, null);
        }
        
        /// <remarks/>
        public void FaxQuery2Async(string Username, string Password, QueryForm QueryForm, QueryControl QueryControl, object userState) {
            if ((this.FaxQuery2OperationCompleted == null)) {
                this.FaxQuery2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFaxQuery2OperationCompleted);
            }
            this.InvokeAsync("FaxQuery2", new object[] {
                        Username,
                        Password,
                        QueryForm,
                        QueryControl}, this.FaxQuery2OperationCompleted, userState);
        }
        
        private void OnFaxQuery2OperationCompleted(object arg) {
            if ((this.FaxQuery2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FaxQuery2Completed(this, new FaxQuery2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.interfax.cc/FaxQuery", RequestNamespace="http://www.interfax.cc", ResponseNamespace="http://www.interfax.cc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public FaxItemEx[] FaxQuery(string Username, string Password, string Verb, string VerbData, int MaxItems, ref int ResultCode) {
            object[] results = this.Invoke("FaxQuery", new object[] {
                        Username,
                        Password,
                        Verb,
                        VerbData,
                        MaxItems,
                        ResultCode});
            ResultCode = ((int)(results[1]));
            return ((FaxItemEx[])(results[0]));
        }
        
        /// <remarks/>
        public void FaxQueryAsync(string Username, string Password, string Verb, string VerbData, int MaxItems, int ResultCode) {
            this.FaxQueryAsync(Username, Password, Verb, VerbData, MaxItems, ResultCode, null);
        }
        
        /// <remarks/>
        public void FaxQueryAsync(string Username, string Password, string Verb, string VerbData, int MaxItems, int ResultCode, object userState) {
            if ((this.FaxQueryOperationCompleted == null)) {
                this.FaxQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFaxQueryOperationCompleted);
            }
            this.InvokeAsync("FaxQuery", new object[] {
                        Username,
                        Password,
                        Verb,
                        VerbData,
                        MaxItems,
                        ResultCode}, this.FaxQueryOperationCompleted, userState);
        }
        
        private void OnFaxQueryOperationCompleted(object arg) {
            if ((this.FaxQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FaxQueryCompleted(this, new FaxQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.interfax.cc/FaxStatus", RequestNamespace="http://www.interfax.cc", ResponseNamespace="http://www.interfax.cc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public FaxItem[] FaxStatus(string Username, string Password, int LastTransactionID, int MaxItems, ref int TotalCount, ref int ListSize, ref int ResultCode) {
            object[] results = this.Invoke("FaxStatus", new object[] {
                        Username,
                        Password,
                        LastTransactionID,
                        MaxItems,
                        TotalCount,
                        ListSize,
                        ResultCode});
            TotalCount = ((int)(results[1]));
            ListSize = ((int)(results[2]));
            ResultCode = ((int)(results[3]));
            return ((FaxItem[])(results[0]));
        }
        
        /// <remarks/>
        public void FaxStatusAsync(string Username, string Password, int LastTransactionID, int MaxItems, int TotalCount, int ListSize, int ResultCode) {
            this.FaxStatusAsync(Username, Password, LastTransactionID, MaxItems, TotalCount, ListSize, ResultCode, null);
        }
        
        /// <remarks/>
        public void FaxStatusAsync(string Username, string Password, int LastTransactionID, int MaxItems, int TotalCount, int ListSize, int ResultCode, object userState) {
            if ((this.FaxStatusOperationCompleted == null)) {
                this.FaxStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFaxStatusOperationCompleted);
            }
            this.InvokeAsync("FaxStatus", new object[] {
                        Username,
                        Password,
                        LastTransactionID,
                        MaxItems,
                        TotalCount,
                        ListSize,
                        ResultCode}, this.FaxStatusOperationCompleted, userState);
        }
        
        private void OnFaxStatusOperationCompleted(object arg) {
            if ((this.FaxStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FaxStatusCompleted(this, new FaxStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.interfax.cc/FaxStatusXML", RequestNamespace="http://www.interfax.cc", ResponseNamespace="http://www.interfax.cc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FaxStatusXML(string Username, string Password, int LastTransactionID, int MaxItems, ref int TotalCount, ref int ListSize, ref int ResultCode) {
            object[] results = this.Invoke("FaxStatusXML", new object[] {
                        Username,
                        Password,
                        LastTransactionID,
                        MaxItems,
                        TotalCount,
                        ListSize,
                        ResultCode});
            TotalCount = ((int)(results[1]));
            ListSize = ((int)(results[2]));
            ResultCode = ((int)(results[3]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FaxStatusXMLAsync(string Username, string Password, int LastTransactionID, int MaxItems, int TotalCount, int ListSize, int ResultCode) {
            this.FaxStatusXMLAsync(Username, Password, LastTransactionID, MaxItems, TotalCount, ListSize, ResultCode, null);
        }
        
        /// <remarks/>
        public void FaxStatusXMLAsync(string Username, string Password, int LastTransactionID, int MaxItems, int TotalCount, int ListSize, int ResultCode, object userState) {
            if ((this.FaxStatusXMLOperationCompleted == null)) {
                this.FaxStatusXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFaxStatusXMLOperationCompleted);
            }
            this.InvokeAsync("FaxStatusXML", new object[] {
                        Username,
                        Password,
                        LastTransactionID,
                        MaxItems,
                        TotalCount,
                        ListSize,
                        ResultCode}, this.FaxStatusXMLOperationCompleted, userState);
        }
        
        private void OnFaxStatusXMLOperationCompleted(object arg) {
            if ((this.FaxStatusXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FaxStatusXMLCompleted(this, new FaxStatusXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.interfax.cc/SendCharFax", RequestNamespace="http://www.interfax.cc", ResponseNamespace="http://www.interfax.cc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long SendCharFax(string Username, string Password, string FaxNumber, string Data, string FileType) {
            object[] results = this.Invoke("SendCharFax", new object[] {
                        Username,
                        Password,
                        FaxNumber,
                        Data,
                        FileType});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void SendCharFaxAsync(string Username, string Password, string FaxNumber, string Data, string FileType) {
            this.SendCharFaxAsync(Username, Password, FaxNumber, Data, FileType, null);
        }
        
        /// <remarks/>
        public void SendCharFaxAsync(string Username, string Password, string FaxNumber, string Data, string FileType, object userState) {
            if ((this.SendCharFaxOperationCompleted == null)) {
                this.SendCharFaxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendCharFaxOperationCompleted);
            }
            this.InvokeAsync("SendCharFax", new object[] {
                        Username,
                        Password,
                        FaxNumber,
                        Data,
                        FileType}, this.SendCharFaxOperationCompleted, userState);
        }
        
        private void OnSendCharFaxOperationCompleted(object arg) {
            if ((this.SendCharFaxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendCharFaxCompleted(this, new SendCharFaxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.interfax.cc/Sendfax", RequestNamespace="http://www.interfax.cc", ResponseNamespace="http://www.interfax.cc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long Sendfax(string Username, string Password, string FaxNumber, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] FileData, string FileType) {
            object[] results = this.Invoke("Sendfax", new object[] {
                        Username,
                        Password,
                        FaxNumber,
                        FileData,
                        FileType});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void SendfaxAsync(string Username, string Password, string FaxNumber, byte[] FileData, string FileType) {
            this.SendfaxAsync(Username, Password, FaxNumber, FileData, FileType, null);
        }
        
        /// <remarks/>
        public void SendfaxAsync(string Username, string Password, string FaxNumber, byte[] FileData, string FileType, object userState) {
            if ((this.SendfaxOperationCompleted == null)) {
                this.SendfaxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendfaxOperationCompleted);
            }
            this.InvokeAsync("Sendfax", new object[] {
                        Username,
                        Password,
                        FaxNumber,
                        FileData,
                        FileType}, this.SendfaxOperationCompleted, userState);
        }
        
        private void OnSendfaxOperationCompleted(object arg) {
            if ((this.SendfaxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendfaxCompleted(this, new SendfaxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.interfax.cc/CancelFax", RequestNamespace="http://www.interfax.cc", ResponseNamespace="http://www.interfax.cc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CancelFax(string Username, string Password, int TransactionID) {
            object[] results = this.Invoke("CancelFax", new object[] {
                        Username,
                        Password,
                        TransactionID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CancelFaxAsync(string Username, string Password, int TransactionID) {
            this.CancelFaxAsync(Username, Password, TransactionID, null);
        }
        
        /// <remarks/>
        public void CancelFaxAsync(string Username, string Password, int TransactionID, object userState) {
            if ((this.CancelFaxOperationCompleted == null)) {
                this.CancelFaxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelFaxOperationCompleted);
            }
            this.InvokeAsync("CancelFax", new object[] {
                        Username,
                        Password,
                        TransactionID}, this.CancelFaxOperationCompleted, userState);
        }
        
        private void OnCancelFaxOperationCompleted(object arg) {
            if ((this.CancelFaxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelFaxCompleted(this, new CancelFaxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.interfax.cc/SendfaxEx", RequestNamespace="http://www.interfax.cc", ResponseNamespace="http://www.interfax.cc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long SendfaxEx(string Username, string Password, string FaxNumbers, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] FilesData, string FileTypes, string FileSizes, System.DateTime Postpone, bool IsHighResolution, string CSID, string Subject, string ReplyAddress) {
            object[] results = this.Invoke("SendfaxEx", new object[] {
                        Username,
                        Password,
                        FaxNumbers,
                        FilesData,
                        FileTypes,
                        FileSizes,
                        Postpone,
                        IsHighResolution,
                        CSID,
                        Subject,
                        ReplyAddress});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void SendfaxExAsync(string Username, string Password, string FaxNumbers, byte[] FilesData, string FileTypes, string FileSizes, System.DateTime Postpone, bool IsHighResolution, string CSID, string Subject, string ReplyAddress) {
            this.SendfaxExAsync(Username, Password, FaxNumbers, FilesData, FileTypes, FileSizes, Postpone, IsHighResolution, CSID, Subject, ReplyAddress, null);
        }
        
        /// <remarks/>
        public void SendfaxExAsync(string Username, string Password, string FaxNumbers, byte[] FilesData, string FileTypes, string FileSizes, System.DateTime Postpone, bool IsHighResolution, string CSID, string Subject, string ReplyAddress, object userState) {
            if ((this.SendfaxExOperationCompleted == null)) {
                this.SendfaxExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendfaxExOperationCompleted);
            }
            this.InvokeAsync("SendfaxEx", new object[] {
                        Username,
                        Password,
                        FaxNumbers,
                        FilesData,
                        FileTypes,
                        FileSizes,
                        Postpone,
                        IsHighResolution,
                        CSID,
                        Subject,
                        ReplyAddress}, this.SendfaxExOperationCompleted, userState);
        }
        
        private void OnSendfaxExOperationCompleted(object arg) {
            if ((this.SendfaxExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendfaxExCompleted(this, new SendfaxExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.interfax.cc/SendfaxEx_2", RequestNamespace="http://www.interfax.cc", ResponseNamespace="http://www.interfax.cc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long SendfaxEx_2(
                    string Username, 
                    string Password, 
                    string FaxNumbers, 
                    string Contacts, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] FilesData, 
                    string FileTypes, 
                    string FileSizes, 
                    System.DateTime Postpone, 
                    int RetriesToPerform, 
                    string CSID, 
                    string PageHeader, 
                    string JobID, 
                    string Subject, 
                    string ReplyAddress, 
                    string PageSize, 
                    string PageOrientation, 
                    bool IsHighResolution, 
                    bool IsFineRendering) {
            object[] results = this.Invoke("SendfaxEx_2", new object[] {
                        Username,
                        Password,
                        FaxNumbers,
                        Contacts,
                        FilesData,
                        FileTypes,
                        FileSizes,
                        Postpone,
                        RetriesToPerform,
                        CSID,
                        PageHeader,
                        JobID,
                        Subject,
                        ReplyAddress,
                        PageSize,
                        PageOrientation,
                        IsHighResolution,
                        IsFineRendering});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void SendfaxEx_2Async(
                    string Username, 
                    string Password, 
                    string FaxNumbers, 
                    string Contacts, 
                    byte[] FilesData, 
                    string FileTypes, 
                    string FileSizes, 
                    System.DateTime Postpone, 
                    int RetriesToPerform, 
                    string CSID, 
                    string PageHeader, 
                    string JobID, 
                    string Subject, 
                    string ReplyAddress, 
                    string PageSize, 
                    string PageOrientation, 
                    bool IsHighResolution, 
                    bool IsFineRendering) {
            this.SendfaxEx_2Async(Username, Password, FaxNumbers, Contacts, FilesData, FileTypes, FileSizes, Postpone, RetriesToPerform, CSID, PageHeader, JobID, Subject, ReplyAddress, PageSize, PageOrientation, IsHighResolution, IsFineRendering, null);
        }
        
        /// <remarks/>
        public void SendfaxEx_2Async(
                    string Username, 
                    string Password, 
                    string FaxNumbers, 
                    string Contacts, 
                    byte[] FilesData, 
                    string FileTypes, 
                    string FileSizes, 
                    System.DateTime Postpone, 
                    int RetriesToPerform, 
                    string CSID, 
                    string PageHeader, 
                    string JobID, 
                    string Subject, 
                    string ReplyAddress, 
                    string PageSize, 
                    string PageOrientation, 
                    bool IsHighResolution, 
                    bool IsFineRendering, 
                    object userState) {
            if ((this.SendfaxEx_2OperationCompleted == null)) {
                this.SendfaxEx_2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendfaxEx_2OperationCompleted);
            }
            this.InvokeAsync("SendfaxEx_2", new object[] {
                        Username,
                        Password,
                        FaxNumbers,
                        Contacts,
                        FilesData,
                        FileTypes,
                        FileSizes,
                        Postpone,
                        RetriesToPerform,
                        CSID,
                        PageHeader,
                        JobID,
                        Subject,
                        ReplyAddress,
                        PageSize,
                        PageOrientation,
                        IsHighResolution,
                        IsFineRendering}, this.SendfaxEx_2OperationCompleted, userState);
        }
        
        private void OnSendfaxEx_2OperationCompleted(object arg) {
            if ((this.SendfaxEx_2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendfaxEx_2Completed(this, new SendfaxEx_2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.interfax.cc/ResendBroadcastFax", RequestNamespace="http://www.interfax.cc", ResponseNamespace="http://www.interfax.cc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long ResendBroadcastFax(string Username, string Password, long ParentTransactionID, string Subject, bool SendErrorsOnly) {
            object[] results = this.Invoke("ResendBroadcastFax", new object[] {
                        Username,
                        Password,
                        ParentTransactionID,
                        Subject,
                        SendErrorsOnly});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void ResendBroadcastFaxAsync(string Username, string Password, long ParentTransactionID, string Subject, bool SendErrorsOnly) {
            this.ResendBroadcastFaxAsync(Username, Password, ParentTransactionID, Subject, SendErrorsOnly, null);
        }
        
        /// <remarks/>
        public void ResendBroadcastFaxAsync(string Username, string Password, long ParentTransactionID, string Subject, bool SendErrorsOnly, object userState) {
            if ((this.ResendBroadcastFaxOperationCompleted == null)) {
                this.ResendBroadcastFaxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResendBroadcastFaxOperationCompleted);
            }
            this.InvokeAsync("ResendBroadcastFax", new object[] {
                        Username,
                        Password,
                        ParentTransactionID,
                        Subject,
                        SendErrorsOnly}, this.ResendBroadcastFaxOperationCompleted, userState);
        }
        
        private void OnResendBroadcastFaxOperationCompleted(object arg) {
            if ((this.ResendBroadcastFaxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResendBroadcastFaxCompleted(this, new ResendBroadcastFaxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.interfax.cc/ReSendFax", RequestNamespace="http://www.interfax.cc", ResponseNamespace="http://www.interfax.cc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long ReSendFax(string Username, string Password, long TransactionID, string FaxNumber) {
            object[] results = this.Invoke("ReSendFax", new object[] {
                        Username,
                        Password,
                        TransactionID,
                        FaxNumber});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void ReSendFaxAsync(string Username, string Password, long TransactionID, string FaxNumber) {
            this.ReSendFaxAsync(Username, Password, TransactionID, FaxNumber, null);
        }
        
        /// <remarks/>
        public void ReSendFaxAsync(string Username, string Password, long TransactionID, string FaxNumber, object userState) {
            if ((this.ReSendFaxOperationCompleted == null)) {
                this.ReSendFaxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReSendFaxOperationCompleted);
            }
            this.InvokeAsync("ReSendFax", new object[] {
                        Username,
                        Password,
                        TransactionID,
                        FaxNumber}, this.ReSendFaxOperationCompleted, userState);
        }
        
        private void OnReSendFaxOperationCompleted(object arg) {
            if ((this.ReSendFaxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReSendFaxCompleted(this, new ReSendFaxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.interfax.cc/GetFaxImage", RequestNamespace="http://www.interfax.cc", ResponseNamespace="http://www.interfax.cc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetFaxImage(string Username, string Password, long TransactionID, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] ref byte[] Image) {
            object[] results = this.Invoke("GetFaxImage", new object[] {
                        Username,
                        Password,
                        TransactionID,
                        Image});
            Image = ((byte[])(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetFaxImageAsync(string Username, string Password, long TransactionID, byte[] Image) {
            this.GetFaxImageAsync(Username, Password, TransactionID, Image, null);
        }
        
        /// <remarks/>
        public void GetFaxImageAsync(string Username, string Password, long TransactionID, byte[] Image, object userState) {
            if ((this.GetFaxImageOperationCompleted == null)) {
                this.GetFaxImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFaxImageOperationCompleted);
            }
            this.InvokeAsync("GetFaxImage", new object[] {
                        Username,
                        Password,
                        TransactionID,
                        Image}, this.GetFaxImageOperationCompleted, userState);
        }
        
        private void OnGetFaxImageOperationCompleted(object arg) {
            if ((this.GetFaxImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFaxImageCompleted(this, new GetFaxImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.interfax.cc/HideFax", RequestNamespace="http://www.interfax.cc", ResponseNamespace="http://www.interfax.cc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int HideFax(string Username, string Password, int TransactionID) {
            object[] results = this.Invoke("HideFax", new object[] {
                        Username,
                        Password,
                        TransactionID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void HideFaxAsync(string Username, string Password, int TransactionID) {
            this.HideFaxAsync(Username, Password, TransactionID, null);
        }
        
        /// <remarks/>
        public void HideFaxAsync(string Username, string Password, int TransactionID, object userState) {
            if ((this.HideFaxOperationCompleted == null)) {
                this.HideFaxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHideFaxOperationCompleted);
            }
            this.InvokeAsync("HideFax", new object[] {
                        Username,
                        Password,
                        TransactionID}, this.HideFaxOperationCompleted, userState);
        }
        
        private void OnHideFaxOperationCompleted(object arg) {
            if ((this.HideFaxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HideFaxCompleted(this, new HideFaxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.interfax.cc/SendWordMailMerge", RequestNamespace="http://www.interfax.cc", ResponseNamespace="http://www.interfax.cc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long SendWordMailMerge(string Username, string Password, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] Document, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] List, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] Options) {
            object[] results = this.Invoke("SendWordMailMerge", new object[] {
                        Username,
                        Password,
                        Document,
                        List,
                        Options});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void SendWordMailMergeAsync(string Username, string Password, byte[] Document, byte[] List, byte[] Options) {
            this.SendWordMailMergeAsync(Username, Password, Document, List, Options, null);
        }
        
        /// <remarks/>
        public void SendWordMailMergeAsync(string Username, string Password, byte[] Document, byte[] List, byte[] Options, object userState) {
            if ((this.SendWordMailMergeOperationCompleted == null)) {
                this.SendWordMailMergeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendWordMailMergeOperationCompleted);
            }
            this.InvokeAsync("SendWordMailMerge", new object[] {
                        Username,
                        Password,
                        Document,
                        List,
                        Options}, this.SendWordMailMergeOperationCompleted, userState);
        }
        
        private void OnSendWordMailMergeOperationCompleted(object arg) {
            if ((this.SendWordMailMergeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendWordMailMergeCompleted(this, new SendWordMailMergeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.interfax.cc/GetSupportedFileTypes", RequestNamespace="http://www.interfax.cc", ResponseNamespace="http://www.interfax.cc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSupportedFileTypes() {
            object[] results = this.Invoke("GetSupportedFileTypes", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSupportedFileTypesAsync() {
            this.GetSupportedFileTypesAsync(null);
        }
        
        /// <remarks/>
        public void GetSupportedFileTypesAsync(object userState) {
            if ((this.GetSupportedFileTypesOperationCompleted == null)) {
                this.GetSupportedFileTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSupportedFileTypesOperationCompleted);
            }
            this.InvokeAsync("GetSupportedFileTypes", new object[0], this.GetSupportedFileTypesOperationCompleted, userState);
        }
        
        private void OnGetSupportedFileTypesOperationCompleted(object arg) {
            if ((this.GetSupportedFileTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSupportedFileTypesCompleted(this, new GetSupportedFileTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.interfax.cc/IsSupportedFileType", RequestNamespace="http://www.interfax.cc", ResponseNamespace="http://www.interfax.cc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsSupportedFileType(string FileType) {
            object[] results = this.Invoke("IsSupportedFileType", new object[] {
                        FileType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsSupportedFileTypeAsync(string FileType) {
            this.IsSupportedFileTypeAsync(FileType, null);
        }
        
        /// <remarks/>
        public void IsSupportedFileTypeAsync(string FileType, object userState) {
            if ((this.IsSupportedFileTypeOperationCompleted == null)) {
                this.IsSupportedFileTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsSupportedFileTypeOperationCompleted);
            }
            this.InvokeAsync("IsSupportedFileType", new object[] {
                        FileType}, this.IsSupportedFileTypeOperationCompleted, userState);
        }
        
        private void OnIsSupportedFileTypeOperationCompleted(object arg) {
            if ((this.IsSupportedFileTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsSupportedFileTypeCompleted(this, new IsSupportedFileTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.interfax.cc/StartFileUpload", RequestNamespace="http://www.interfax.cc", ResponseNamespace="http://www.interfax.cc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int StartFileUpload(string Username, string Password, ref string SessionID) {
            object[] results = this.Invoke("StartFileUpload", new object[] {
                        Username,
                        Password,
                        SessionID});
            SessionID = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void StartFileUploadAsync(string Username, string Password, string SessionID) {
            this.StartFileUploadAsync(Username, Password, SessionID, null);
        }
        
        /// <remarks/>
        public void StartFileUploadAsync(string Username, string Password, string SessionID, object userState) {
            if ((this.StartFileUploadOperationCompleted == null)) {
                this.StartFileUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartFileUploadOperationCompleted);
            }
            this.InvokeAsync("StartFileUpload", new object[] {
                        Username,
                        Password,
                        SessionID}, this.StartFileUploadOperationCompleted, userState);
        }
        
        private void OnStartFileUploadOperationCompleted(object arg) {
            if ((this.StartFileUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartFileUploadCompleted(this, new StartFileUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.interfax.cc/UploadFileChunk", RequestNamespace="http://www.interfax.cc", ResponseNamespace="http://www.interfax.cc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UploadFileChunk(string SessionID, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] Chunk, bool IsLast) {
            object[] results = this.Invoke("UploadFileChunk", new object[] {
                        SessionID,
                        Chunk,
                        IsLast});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UploadFileChunkAsync(string SessionID, byte[] Chunk, bool IsLast) {
            this.UploadFileChunkAsync(SessionID, Chunk, IsLast, null);
        }
        
        /// <remarks/>
        public void UploadFileChunkAsync(string SessionID, byte[] Chunk, bool IsLast, object userState) {
            if ((this.UploadFileChunkOperationCompleted == null)) {
                this.UploadFileChunkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadFileChunkOperationCompleted);
            }
            this.InvokeAsync("UploadFileChunk", new object[] {
                        SessionID,
                        Chunk,
                        IsLast}, this.UploadFileChunkOperationCompleted, userState);
        }
        
        private void OnUploadFileChunkOperationCompleted(object arg) {
            if ((this.UploadFileChunkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadFileChunkCompleted(this, new UploadFileChunkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.interfax.cc/CancelFileUpload", RequestNamespace="http://www.interfax.cc", ResponseNamespace="http://www.interfax.cc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CancelFileUpload(string SessionID) {
            object[] results = this.Invoke("CancelFileUpload", new object[] {
                        SessionID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CancelFileUploadAsync(string SessionID) {
            this.CancelFileUploadAsync(SessionID, null);
        }
        
        /// <remarks/>
        public void CancelFileUploadAsync(string SessionID, object userState) {
            if ((this.CancelFileUploadOperationCompleted == null)) {
                this.CancelFileUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelFileUploadOperationCompleted);
            }
            this.InvokeAsync("CancelFileUpload", new object[] {
                        SessionID}, this.CancelFileUploadOperationCompleted, userState);
        }
        
        private void OnCancelFileUploadOperationCompleted(object arg) {
            if ((this.CancelFileUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelFileUploadCompleted(this, new CancelFileUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.interfax.cc")]
    public partial class ListPPResult {
        
        private bool validField;
        
        private int accountIDField;
        
        private string currencyCodeField;
        
        private string dateFormatField;
        
        private string accountTypeField;
        
        private PPCardDetails[] pPCardsDetailsField;
        
        private int resultCodeField;
        
        /// <remarks/>
        public bool Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        public int AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
        
        /// <remarks/>
        public string CurrencyCode {
            get {
                return this.currencyCodeField;
            }
            set {
                this.currencyCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DateFormat {
            get {
                return this.dateFormatField;
            }
            set {
                this.dateFormatField = value;
            }
        }
        
        /// <remarks/>
        public string AccountType {
            get {
                return this.accountTypeField;
            }
            set {
                this.accountTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public PPCardDetails[] PPCardsDetails {
            get {
                return this.pPCardsDetailsField;
            }
            set {
                this.pPCardsDetailsField = value;
            }
        }
        
        /// <remarks/>
        public int ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.interfax.cc")]
    public partial class PPCardDetails {
        
        private decimal balanceField;
        
        private decimal bonusField;
        
        private System.DateTime closeDateField;
        
        private decimal currentUsageField;
        
        private decimal faceValueField;
        
        private System.DateTime issueDateField;
        
        private int pPCardIDField;
        
        private decimal previousChargeField;
        
        private int previousPPCardField;
        
        private decimal originalBalanceField;
        
        /// <remarks/>
        public decimal Balance {
            get {
                return this.balanceField;
            }
            set {
                this.balanceField = value;
            }
        }
        
        /// <remarks/>
        public decimal Bonus {
            get {
                return this.bonusField;
            }
            set {
                this.bonusField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CloseDate {
            get {
                return this.closeDateField;
            }
            set {
                this.closeDateField = value;
            }
        }
        
        /// <remarks/>
        public decimal CurrentUsage {
            get {
                return this.currentUsageField;
            }
            set {
                this.currentUsageField = value;
            }
        }
        
        /// <remarks/>
        public decimal FaceValue {
            get {
                return this.faceValueField;
            }
            set {
                this.faceValueField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime IssueDate {
            get {
                return this.issueDateField;
            }
            set {
                this.issueDateField = value;
            }
        }
        
        /// <remarks/>
        public int PPCardID {
            get {
                return this.pPCardIDField;
            }
            set {
                this.pPCardIDField = value;
            }
        }
        
        /// <remarks/>
        public decimal PreviousCharge {
            get {
                return this.previousChargeField;
            }
            set {
                this.previousChargeField = value;
            }
        }
        
        /// <remarks/>
        public int PreviousPPCard {
            get {
                return this.previousPPCardField;
            }
            set {
                this.previousPPCardField = value;
            }
        }
        
        /// <remarks/>
        public decimal OriginalBalance {
            get {
                return this.originalBalanceField;
            }
            set {
                this.originalBalanceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.interfax.cc")]
    public partial class FaxItem {
        
        private int transactionIDField;
        
        private System.DateTime submitTimeField;
        
        private System.DateTime postponeTimeField;
        
        private System.DateTime completionTimeField;
        
        private string destinationFaxField;
        
        private string remoteCSIDField;
        
        private short pagesSentField;
        
        private int statusField;
        
        private int durationField;
        
        private string subjectField;
        
        private short pagesSubmittedField;
        
        /// <remarks/>
        public int TransactionID {
            get {
                return this.transactionIDField;
            }
            set {
                this.transactionIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime SubmitTime {
            get {
                return this.submitTimeField;
            }
            set {
                this.submitTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime PostponeTime {
            get {
                return this.postponeTimeField;
            }
            set {
                this.postponeTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CompletionTime {
            get {
                return this.completionTimeField;
            }
            set {
                this.completionTimeField = value;
            }
        }
        
        /// <remarks/>
        public string DestinationFax {
            get {
                return this.destinationFaxField;
            }
            set {
                this.destinationFaxField = value;
            }
        }
        
        /// <remarks/>
        public string RemoteCSID {
            get {
                return this.remoteCSIDField;
            }
            set {
                this.remoteCSIDField = value;
            }
        }
        
        /// <remarks/>
        public short PagesSent {
            get {
                return this.pagesSentField;
            }
            set {
                this.pagesSentField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public int Duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public short PagesSubmitted {
            get {
                return this.pagesSubmittedField;
            }
            set {
                this.pagesSubmittedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.interfax.cc")]
    public partial class StatusCount {
        
        private int statusField;
        
        private int countField;
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public int Count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.interfax.cc")]
    public partial class FaxItemEx2 {
        
        private int parentTransactionIDField;
        
        private int transactionIDField;
        
        private System.DateTime submitTimeField;
        
        private System.DateTime postponeTimeField;
        
        private System.DateTime completionTimeField;
        
        private string userIDField;
        
        private string contactField;
        
        private string jobIDField;
        
        private string destinationFaxField;
        
        private string replyEmailField;
        
        private string remoteCSIDField;
        
        private short pagesSentField;
        
        private int statusField;
        
        private int durationField;
        
        private string subjectField;
        
        private short pagesSubmittedField;
        
        private string senderCSIDField;
        
        private short priorityField;
        
        private decimal unitsField;
        
        private decimal costPerUnitField;
        
        private string pageSizeField;
        
        private string pageOrientationField;
        
        private string pageResolutionField;
        
        private string renderingQualityField;
        
        private string pageHeaderField;
        
        private short retriesToPerformField;
        
        private short trialsPerformedField;
        
        private int localeIDField;
        
        private int gMTBiasField;
        
        private int retriesIntervalField;
        
        private string userDataField;
        
        private string deleteAfterUsageField;
        
        private string modeField;
        
        private int numOfTransactionsField;
        
        private string messageIDField;
        
        /// <remarks/>
        public int ParentTransactionID {
            get {
                return this.parentTransactionIDField;
            }
            set {
                this.parentTransactionIDField = value;
            }
        }
        
        /// <remarks/>
        public int TransactionID {
            get {
                return this.transactionIDField;
            }
            set {
                this.transactionIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime SubmitTime {
            get {
                return this.submitTimeField;
            }
            set {
                this.submitTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime PostponeTime {
            get {
                return this.postponeTimeField;
            }
            set {
                this.postponeTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CompletionTime {
            get {
                return this.completionTimeField;
            }
            set {
                this.completionTimeField = value;
            }
        }
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string Contact {
            get {
                return this.contactField;
            }
            set {
                this.contactField = value;
            }
        }
        
        /// <remarks/>
        public string JobID {
            get {
                return this.jobIDField;
            }
            set {
                this.jobIDField = value;
            }
        }
        
        /// <remarks/>
        public string DestinationFax {
            get {
                return this.destinationFaxField;
            }
            set {
                this.destinationFaxField = value;
            }
        }
        
        /// <remarks/>
        public string ReplyEmail {
            get {
                return this.replyEmailField;
            }
            set {
                this.replyEmailField = value;
            }
        }
        
        /// <remarks/>
        public string RemoteCSID {
            get {
                return this.remoteCSIDField;
            }
            set {
                this.remoteCSIDField = value;
            }
        }
        
        /// <remarks/>
        public short PagesSent {
            get {
                return this.pagesSentField;
            }
            set {
                this.pagesSentField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public int Duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public short PagesSubmitted {
            get {
                return this.pagesSubmittedField;
            }
            set {
                this.pagesSubmittedField = value;
            }
        }
        
        /// <remarks/>
        public string SenderCSID {
            get {
                return this.senderCSIDField;
            }
            set {
                this.senderCSIDField = value;
            }
        }
        
        /// <remarks/>
        public short Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        public decimal Units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        public decimal CostPerUnit {
            get {
                return this.costPerUnitField;
            }
            set {
                this.costPerUnitField = value;
            }
        }
        
        /// <remarks/>
        public string PageSize {
            get {
                return this.pageSizeField;
            }
            set {
                this.pageSizeField = value;
            }
        }
        
        /// <remarks/>
        public string PageOrientation {
            get {
                return this.pageOrientationField;
            }
            set {
                this.pageOrientationField = value;
            }
        }
        
        /// <remarks/>
        public string PageResolution {
            get {
                return this.pageResolutionField;
            }
            set {
                this.pageResolutionField = value;
            }
        }
        
        /// <remarks/>
        public string RenderingQuality {
            get {
                return this.renderingQualityField;
            }
            set {
                this.renderingQualityField = value;
            }
        }
        
        /// <remarks/>
        public string PageHeader {
            get {
                return this.pageHeaderField;
            }
            set {
                this.pageHeaderField = value;
            }
        }
        
        /// <remarks/>
        public short RetriesToPerform {
            get {
                return this.retriesToPerformField;
            }
            set {
                this.retriesToPerformField = value;
            }
        }
        
        /// <remarks/>
        public short TrialsPerformed {
            get {
                return this.trialsPerformedField;
            }
            set {
                this.trialsPerformedField = value;
            }
        }
        
        /// <remarks/>
        public int LocaleID {
            get {
                return this.localeIDField;
            }
            set {
                this.localeIDField = value;
            }
        }
        
        /// <remarks/>
        public int GMTBias {
            get {
                return this.gMTBiasField;
            }
            set {
                this.gMTBiasField = value;
            }
        }
        
        /// <remarks/>
        public int RetriesInterval {
            get {
                return this.retriesIntervalField;
            }
            set {
                this.retriesIntervalField = value;
            }
        }
        
        /// <remarks/>
        public string UserData {
            get {
                return this.userDataField;
            }
            set {
                this.userDataField = value;
            }
        }
        
        /// <remarks/>
        public string DeleteAfterUsage {
            get {
                return this.deleteAfterUsageField;
            }
            set {
                this.deleteAfterUsageField = value;
            }
        }
        
        /// <remarks/>
        public string Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
            }
        }
        
        /// <remarks/>
        public int NumOfTransactions {
            get {
                return this.numOfTransactionsField;
            }
            set {
                this.numOfTransactionsField = value;
            }
        }
        
        /// <remarks/>
        public string MessageID {
            get {
                return this.messageIDField;
            }
            set {
                this.messageIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.interfax.cc")]
    public partial class FaxQueryResult {
        
        private int resultCodeField;
        
        private FaxItemEx2[] faxItemsField;
        
        private StatusCount[] statsField;
        
        private string errorsDescriptionHTMLFormatField;
        
        private int totalTransactionsNumField;
        
        /// <remarks/>
        public int ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public FaxItemEx2[] FaxItems {
            get {
                return this.faxItemsField;
            }
            set {
                this.faxItemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public StatusCount[] Stats {
            get {
                return this.statsField;
            }
            set {
                this.statsField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorsDescriptionHTMLFormat {
            get {
                return this.errorsDescriptionHTMLFormatField;
            }
            set {
                this.errorsDescriptionHTMLFormatField = value;
            }
        }
        
        /// <remarks/>
        public int TotalTransactionsNum {
            get {
                return this.totalTransactionsNumField;
            }
            set {
                this.totalTransactionsNumField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.interfax.cc")]
    public partial class QueryControl {
        
        private bool onlyParentsField;
        
        private int numOfResultsField;
        
        private int startingRecordField;
        
        private OrderByColumnEnum orderByField;
        
        private bool ascOrderDirectionField;
        
        private bool returnItemsField;
        
        private bool returnStatsField;
        
        /// <remarks/>
        public bool OnlyParents {
            get {
                return this.onlyParentsField;
            }
            set {
                this.onlyParentsField = value;
            }
        }
        
        /// <remarks/>
        public int NumOfResults {
            get {
                return this.numOfResultsField;
            }
            set {
                this.numOfResultsField = value;
            }
        }
        
        /// <remarks/>
        public int StartingRecord {
            get {
                return this.startingRecordField;
            }
            set {
                this.startingRecordField = value;
            }
        }
        
        /// <remarks/>
        public OrderByColumnEnum OrderBy {
            get {
                return this.orderByField;
            }
            set {
                this.orderByField = value;
            }
        }
        
        /// <remarks/>
        public bool AscOrderDirection {
            get {
                return this.ascOrderDirectionField;
            }
            set {
                this.ascOrderDirectionField = value;
            }
        }
        
        /// <remarks/>
        public bool ReturnItems {
            get {
                return this.returnItemsField;
            }
            set {
                this.returnItemsField = value;
            }
        }
        
        /// <remarks/>
        public bool ReturnStats {
            get {
                return this.returnStatsField;
            }
            set {
                this.returnStatsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.interfax.cc")]
    public enum OrderByColumnEnum {
        
        /// <remarks/>
        TransactionID,
        
        /// <remarks/>
        SubmitTime,
        
        /// <remarks/>
        CompletionTime,
        
        /// <remarks/>
        Status,
        
        /// <remarks/>
        DestinationFax,
        
        /// <remarks/>
        Subject,
        
        /// <remarks/>
        PagesSent,
        
        /// <remarks/>
        UserID,
        
        /// <remarks/>
        ReplyEmail,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.interfax.cc")]
    public partial class QueryCondition {
        
        private SQLOperatorEnum verbField;
        
        private string verbDataField;
        
        /// <remarks/>
        public SQLOperatorEnum Verb {
            get {
                return this.verbField;
            }
            set {
                this.verbField = value;
            }
        }
        
        /// <remarks/>
        public string VerbData {
            get {
                return this.verbDataField;
            }
            set {
                this.verbDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.interfax.cc")]
    public enum SQLOperatorEnum {
        
        /// <remarks/>
        Equals,
        
        /// <remarks/>
        GreaterThan,
        
        /// <remarks/>
        GreaterOrEqual,
        
        /// <remarks/>
        LessThan,
        
        /// <remarks/>
        LessOrEqual,
        
        /// <remarks/>
        Like,
        
        /// <remarks/>
        IncludedIn,
        
        /// <remarks/>
        Between,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.interfax.cc")]
    public partial class QueryForm {
        
        private QueryCondition subjectField;
        
        private QueryCondition faxNumberField;
        
        private System.DateTime dateFromField;
        
        private System.DateTime dateToField;
        
        private QueryCondition userIDField;
        
        private QueryCondition replyAddressField;
        
        private QueryCondition transactionIDField;
        
        private QueryCondition parentTransactionIDField;
        
        private QueryCondition statusField;
        
        private bool showHiddenTransactionsField;
        
        /// <remarks/>
        public QueryCondition Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public QueryCondition FaxNumber {
            get {
                return this.faxNumberField;
            }
            set {
                this.faxNumberField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateFrom {
            get {
                return this.dateFromField;
            }
            set {
                this.dateFromField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateTo {
            get {
                return this.dateToField;
            }
            set {
                this.dateToField = value;
            }
        }
        
        /// <remarks/>
        public QueryCondition UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public QueryCondition ReplyAddress {
            get {
                return this.replyAddressField;
            }
            set {
                this.replyAddressField = value;
            }
        }
        
        /// <remarks/>
        public QueryCondition TransactionID {
            get {
                return this.transactionIDField;
            }
            set {
                this.transactionIDField = value;
            }
        }
        
        /// <remarks/>
        public QueryCondition ParentTransactionID {
            get {
                return this.parentTransactionIDField;
            }
            set {
                this.parentTransactionIDField = value;
            }
        }
        
        /// <remarks/>
        public QueryCondition Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public bool ShowHiddenTransactions {
            get {
                return this.showHiddenTransactionsField;
            }
            set {
                this.showHiddenTransactionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.interfax.cc")]
    public partial class PPCardTrasnactionsByteArray {
        
        private byte[] transactionsField;
        
        private int resultCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Transactions {
            get {
                return this.transactionsField;
            }
            set {
                this.transactionsField = value;
            }
        }
        
        /// <remarks/>
        public int ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.interfax.cc")]
    public partial class FaxItemEx {
        
        private int parentTransactionIDField;
        
        private int transactionIDField;
        
        private System.DateTime submitTimeField;
        
        private System.DateTime postponeTimeField;
        
        private System.DateTime completionTimeField;
        
        private string userIDField;
        
        private string contactField;
        
        private string jobIDField;
        
        private string destinationFaxField;
        
        private string replyEmailField;
        
        private string remoteCSIDField;
        
        private short pagesSentField;
        
        private int statusField;
        
        private int durationField;
        
        private string subjectField;
        
        private short pagesSubmittedField;
        
        private string senderCSIDField;
        
        private short priorityField;
        
        private decimal unitsField;
        
        private decimal costPerUnitField;
        
        private string pageSizeField;
        
        private string pageOrientationField;
        
        private string pageResolutionField;
        
        private string renderingQualityField;
        
        private string pageHeaderField;
        
        private short retriesToPerformField;
        
        private short trialsPerformedField;
        
        /// <remarks/>
        public int ParentTransactionID {
            get {
                return this.parentTransactionIDField;
            }
            set {
                this.parentTransactionIDField = value;
            }
        }
        
        /// <remarks/>
        public int TransactionID {
            get {
                return this.transactionIDField;
            }
            set {
                this.transactionIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime SubmitTime {
            get {
                return this.submitTimeField;
            }
            set {
                this.submitTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime PostponeTime {
            get {
                return this.postponeTimeField;
            }
            set {
                this.postponeTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CompletionTime {
            get {
                return this.completionTimeField;
            }
            set {
                this.completionTimeField = value;
            }
        }
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string Contact {
            get {
                return this.contactField;
            }
            set {
                this.contactField = value;
            }
        }
        
        /// <remarks/>
        public string JobID {
            get {
                return this.jobIDField;
            }
            set {
                this.jobIDField = value;
            }
        }
        
        /// <remarks/>
        public string DestinationFax {
            get {
                return this.destinationFaxField;
            }
            set {
                this.destinationFaxField = value;
            }
        }
        
        /// <remarks/>
        public string ReplyEmail {
            get {
                return this.replyEmailField;
            }
            set {
                this.replyEmailField = value;
            }
        }
        
        /// <remarks/>
        public string RemoteCSID {
            get {
                return this.remoteCSIDField;
            }
            set {
                this.remoteCSIDField = value;
            }
        }
        
        /// <remarks/>
        public short PagesSent {
            get {
                return this.pagesSentField;
            }
            set {
                this.pagesSentField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public int Duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public short PagesSubmitted {
            get {
                return this.pagesSubmittedField;
            }
            set {
                this.pagesSubmittedField = value;
            }
        }
        
        /// <remarks/>
        public string SenderCSID {
            get {
                return this.senderCSIDField;
            }
            set {
                this.senderCSIDField = value;
            }
        }
        
        /// <remarks/>
        public short Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        public decimal Units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        public decimal CostPerUnit {
            get {
                return this.costPerUnitField;
            }
            set {
                this.costPerUnitField = value;
            }
        }
        
        /// <remarks/>
        public string PageSize {
            get {
                return this.pageSizeField;
            }
            set {
                this.pageSizeField = value;
            }
        }
        
        /// <remarks/>
        public string PageOrientation {
            get {
                return this.pageOrientationField;
            }
            set {
                this.pageOrientationField = value;
            }
        }
        
        /// <remarks/>
        public string PageResolution {
            get {
                return this.pageResolutionField;
            }
            set {
                this.pageResolutionField = value;
            }
        }
        
        /// <remarks/>
        public string RenderingQuality {
            get {
                return this.renderingQualityField;
            }
            set {
                this.renderingQualityField = value;
            }
        }
        
        /// <remarks/>
        public string PageHeader {
            get {
                return this.pageHeaderField;
            }
            set {
                this.pageHeaderField = value;
            }
        }
        
        /// <remarks/>
        public short RetriesToPerform {
            get {
                return this.retriesToPerformField;
            }
            set {
                this.retriesToPerformField = value;
            }
        }
        
        /// <remarks/>
        public short TrialsPerformed {
            get {
                return this.trialsPerformedField;
            }
            set {
                this.trialsPerformedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.interfax.cc")]
    public partial class PPCardTransactions {
        
        private FaxItemEx[] transactionsField;
        
        private int totalNumOfTransactionsField;
        
        private string currencyField;
        
        private int firstResultField;
        
        private int numOfResultsField;
        
        private int resultCodeField;
        
        private decimal lastBalanceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public FaxItemEx[] Transactions {
            get {
                return this.transactionsField;
            }
            set {
                this.transactionsField = value;
            }
        }
        
        /// <remarks/>
        public int TotalNumOfTransactions {
            get {
                return this.totalNumOfTransactionsField;
            }
            set {
                this.totalNumOfTransactionsField = value;
            }
        }
        
        /// <remarks/>
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        public int FirstResult {
            get {
                return this.firstResultField;
            }
            set {
                this.firstResultField = value;
            }
        }
        
        /// <remarks/>
        public int NumOfResults {
            get {
                return this.numOfResultsField;
            }
            set {
                this.numOfResultsField = value;
            }
        }
        
        /// <remarks/>
        public int ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
            }
        }
        
        /// <remarks/>
        public decimal LastBalance {
            get {
                return this.lastBalanceField;
            }
            set {
                this.lastBalanceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.interfax.cc")]
    public partial class PPCardResult {
        
        private PPCardDetails detailsField;
        
        private int resultCodeField;
        
        /// <remarks/>
        public PPCardDetails Details {
            get {
                return this.detailsField;
            }
            set {
                this.detailsField = value;
            }
        }
        
        /// <remarks/>
        public int ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetListPPCompletedEventHandler(object sender, GetListPPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListPPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListPPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ListPPResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ListPPResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetPPCardDetailsCompletedEventHandler(object sender, GetPPCardDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPPCardDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPPCardDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PPCardResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PPCardResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetPPCardTransactionsCompletedEventHandler(object sender, GetPPCardTransactionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPPCardTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPPCardTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PPCardTransactions Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PPCardTransactions)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetPPCardTransactionsAsByteArrayCompletedEventHandler(object sender, GetPPCardTransactionsAsByteArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPPCardTransactionsAsByteArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPPCardTransactionsAsByteArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PPCardTrasnactionsByteArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PPCardTrasnactionsByteArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void FaxStatusExCompletedEventHandler(object sender, FaxStatusExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FaxStatusExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FaxStatusExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FaxItemEx[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FaxItemEx[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int TotalCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int ListSize {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public int ResultCode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void FaxQuery2CompletedEventHandler(object sender, FaxQuery2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FaxQuery2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FaxQuery2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FaxQueryResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FaxQueryResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void FaxQueryCompletedEventHandler(object sender, FaxQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FaxQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FaxQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FaxItemEx[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FaxItemEx[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int ResultCode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void FaxStatusCompletedEventHandler(object sender, FaxStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FaxStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FaxStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FaxItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FaxItem[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int TotalCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int ListSize {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public int ResultCode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void FaxStatusXMLCompletedEventHandler(object sender, FaxStatusXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FaxStatusXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FaxStatusXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int TotalCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int ListSize {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public int ResultCode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SendCharFaxCompletedEventHandler(object sender, SendCharFaxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendCharFaxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendCharFaxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SendfaxCompletedEventHandler(object sender, SendfaxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendfaxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendfaxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void CancelFaxCompletedEventHandler(object sender, CancelFaxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelFaxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelFaxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SendfaxExCompletedEventHandler(object sender, SendfaxExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendfaxExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendfaxExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SendfaxEx_2CompletedEventHandler(object sender, SendfaxEx_2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendfaxEx_2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendfaxEx_2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ResendBroadcastFaxCompletedEventHandler(object sender, ResendBroadcastFaxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResendBroadcastFaxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResendBroadcastFaxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ReSendFaxCompletedEventHandler(object sender, ReSendFaxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReSendFaxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReSendFaxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetFaxImageCompletedEventHandler(object sender, GetFaxImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFaxImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFaxImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public byte[] Image {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void HideFaxCompletedEventHandler(object sender, HideFaxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HideFaxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HideFaxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SendWordMailMergeCompletedEventHandler(object sender, SendWordMailMergeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendWordMailMergeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendWordMailMergeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetSupportedFileTypesCompletedEventHandler(object sender, GetSupportedFileTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSupportedFileTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSupportedFileTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void IsSupportedFileTypeCompletedEventHandler(object sender, IsSupportedFileTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsSupportedFileTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsSupportedFileTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void StartFileUploadCompletedEventHandler(object sender, StartFileUploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartFileUploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartFileUploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string SessionID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void UploadFileChunkCompletedEventHandler(object sender, UploadFileChunkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadFileChunkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadFileChunkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void CancelFileUploadCompletedEventHandler(object sender, CancelFileUploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelFileUploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelFileUploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591